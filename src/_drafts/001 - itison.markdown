---
categories: Blogging
tags: blogofile, html5 boilerplate, twitter bootstrap, github
date: 2012/04/01 00:00:00
title: It's on!
---

In life of every developer there is a time, when you are no longer able to keep all that crap in mind. Algorithms and data structures, programming languages, frameworks and methodologies, VIM hotkeys, grocery lists ... aggrhh!! In such moments you either have to get rid of part of the knowledge, or come up with new ways of arranging and storing it. There are 2-3 workbooks in my backpack for such case in my backpack all the time, scribbled with fragments of lectures, problem solvings, pieces of code and simple discussions about the nature of all things. And it solves some part of the problem. But workbooks wear out, burn and sometimes dissapear for no reason.. Things get even worth if you want to share the knowledge with somebody. So, sooner or later, every developer starts a blog. Same happened to me this spring.

Of course, there are dozens of specialized resources, like `livejournal` or `wordpress`. But didn't want to mess with those: design is typically overloaded, you have to make it up with ads or get a paid account. This is not a geek-way. So I've decided to make it all by myself. I'll show you how further. Here is the stack, I've used:

*   [blogofile](http://www.blogofile.com/) python-powered site compiler
*   [html5 boilerplate](http://html5boilerplate.com/) HTML/CSS/JS template
*   [twitter bootstrap](http://twitter.github.com/bootstrap/) my favourite CSS framework
*   [github pages](http://pages.github.com/) free hosting

## Blogofile

Blogofile is a static site compiler, initially made up for blogs. It comes with such tasty things as [markdown](http://daringfireball.net/projects/markdown/) (textile, reStructuredText) markup, [disqus](http://disqus.com/) comment system, syntax highlighting and lots more out of the box. There will be even more in the [next version](http://www.blogofile.com/blog/2011/04/30/preview-of-blogofile-0.8/). Furthermore, it has nice and clean API, so there will be no problems in adding new functions. Simple blog, generated by `blogofile init simple blog` has the [following structure](https://github.com/filipovskii/filipovskii.github.com/tree/blogofile_init/src):

    .
    ├── _config.py
    ├── _controllers
    │   ├── blog
    │   │   ├── chronological.py
    │   │   ...
    │   │   └── post.py
    │   └── org.py
    ├── _filters
    │   ├── markdown_template.py
    │   ...
    │   └── textile_template.py
    ├── index.html.mako
    ├── _posts
    │   ├── 001 - post 1.markdown
    |   ...
    │   └── 008 - post 8 - syntax highlight.markdown
    └── _templates
        ├── atom.mako
        ...
        └── site.mako

*   Everything should be clear with *posts*. They contain yaml-header and some content, written with your favourite markup language.

*   *Controllers* generate static content. Suppose you want a page, that will contain a sequence of blog posts, listed in reverse chronological order, paginated 5 posts per page - that what *controller* should be written for. And in a simple blog, we already have that one - `chronological.py`.

*   *Filters* are methods of transforming content. E.g. `markdown_template.py` converts markdown markup into html.

*   *Templates* define site appearence. Blogofile uses [Mako](http://www.makotemplates.org/) for this.

*   *_config.py* contains site preferences. For example, [disqus](http://www.disqus.com) should be turned on there.


## html5 boilerplate and twitter bootstrap

This tools are way more popular than blogofile, so I won't tell much about them. You can read about `html5 boilerplate` on [there site](http://html5boilerplate.com/). And [here](https://github.com/filipovskii/filipovskii.github.com/tree/boilerplate) is a github branch with the result of adding it to the blog.

`Bootstrap` is also [very well documented](http://twitter.github.com/bootstrap/), easy to use and customize. Grab the [branch](https://github.com/filipovskii/filipovskii.github.com/tree/bootstrap).

## Github pages

[Github pages](http://pages.github.com/) is a free hosting of static content. Idea behind the project is to give an opportunity to place some info about you or your GitHub project. It supports [Jekyll](https://github.com/mojombo/jekyll), another static site compiler, by default. This one is written in Ruby and is definitely worth a look.

Service can be used for user and project pages. In order to create user page, you have to make a repo with the name like `[your-github-username].github.com`, commit file `index.html` to its master branch and push it to GitHub. Over time, this file will be published here: `http://[your-github-username].github.com/`.

Project page can be created with generator, or manually by creating `gh-pages` branch of your project.

You can learn more about this project [here](http://help.github.com/pages/).


## Instead of conclusion

I've found, what I was looking for. With given stack, it became possible to create simple, customizable, cute blog. My future plans are to learn this thing to generate `pdf`, `epub` or `mobi` content, work on it's design and, hopefully, start writing regularly. But for now, it had been much more interesting to create this blog, then to write something in it ... maybe blogging is not for me..?
